#!/usr/bin/env zsh
#
# Deletes all branches that are merged into the current branch

set -eu -o pipefail

# find all branches that's not the current branch
function all_merged_branches {
    git branch --format="%(if)%(HEAD)%(then)%(else)%(refname:short)%(end)" --merged \
        | grep -v '^master$' \
        | grep -v '^main$'
}

function git_delete_merged {
    local branches=( $(all_merged_branches) )

    if [[ ${#branches} -gt 0 ]]; then
        print "Deleting branches: ${branches}"
        git bb-delete-branch $branches
    else
        print 'No merged branches to delete'
    fi

    # prune remote branches for good measure
    local remote_name
    for remote_name in $(git remote); do
        print "Pruning remote: ${remote_name}"
        git remote prune $remote_name
    done
}

git_delete_merged "$@"
