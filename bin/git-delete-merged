#!/usr/bin/env zsh
#
# Deletes all branches that are merged into the current branch

set -eu -o pipefail

# find all branches that's not the current branch
function get_other_branches {
    # awk NF removes empty lines: https://unix.stackexchange.com/a/274709
    git branch --format="%(if)%(HEAD)%(then)%(else)%(refname:short)%(end)" "$@" | awk NF
}

function all_merged_branches {
    get_other_branches --merged
}

function all_squashed_branches {
    # https://github.com/not-an-aardvark/git-delete-squashed
    get_other_branches | while read branch; do
        merge_base=$(git merge-base HEAD $branch)
        test_commit=$(git commit-tree $(git rev-parse "${branch}^{tree}") -p $merge_base -m _)
        if [[ $(git cherry HEAD $test_commit) == "-"* ]]; then
            echo $branch
        fi
    done
}

function git_delete_merged {
    case $(git branch --show-current) in
        (main|master) ;;
        (*)
            print 'Not on main branch, skipping merged branch deletion.'
            return 0
        ;;
    esac

    local branches=(
        $(all_merged_branches)
        $(all_squashed_branches)
    )

    if [[ ${#branches} -gt 0 ]]; then
        print "Deleting branches: ${branches}"
        git branch-manager-delete-branch -D $branches
    else
        print 'No merged branches to delete'
    fi
}

git_delete_merged "$@"
